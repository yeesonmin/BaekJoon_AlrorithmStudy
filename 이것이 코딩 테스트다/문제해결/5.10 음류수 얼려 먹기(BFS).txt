#include <iostream>
#include <queue>
using namespace std;

int dx[4] = { 0, 0, -1, 1 }, dy[4] = {-1,1,0,0}; 
bool map[1000][1000];
int n, m;

//BFS
void main()
{

	int cnt = 0;
	string s;
	queue<pair <int, int>> q;

	cin >> n >> m;

	for (int i = 0; i < n; i++)
	{
		cin >> s;
		for (int j = 0; j < m; j++) {
			map[i][j] = s[j] - '0';
		}
	}


	int x, y;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++) {
			
			if (map[i][j] == 0) {
				q.push({ i, j });
				map[i][j] = 1;

				while (!q.empty())
				{
					x = q.front().first;
					y = q.front().second;
					q.pop();

					for (int k = 0; k < 4; k++) {
						int X = dx[k] + x, Y = y + dy[k];

						if ((X >= 0 && X < n) && (Y >= 0 && Y < m))
						{
							if (map[X][Y] == 0) {
								map[X][Y] = 1;
								q.push({ X, Y });
							}
							
						}
						
					}
				} 
				cnt++;
			}
		}
	}

	cout << cnt;
}